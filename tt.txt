diff --git a/app.js b/app.js
index 9c8313e..8516c50 100644
--- a/app.js
+++ b/app.js
@@ -25,6 +25,7 @@ app.use(express.static(path.join(__dirname, 'public')));
 
 app.use('/', require('./routes/index'));
 app.use('/api_v1/anuncios', require('./routes/api_v1/anuncios'));
+app.use('/api_v1/signIn', require('./routes/api_v1/signIn'));
 app.use('/api_v1/usuarios', require('./routes/api_v1/usuarios'));
 
 // catch 404 and forward to error handler
diff --git a/config/jwtConfig.js b/config/jwtConfig.js
new file mode 100644
index 0000000..148ee95
--- /dev/null
+++ b/config/jwtConfig.js
@@ -0,0 +1,10 @@
+"use strict";
+
+let config = {};
+
+config.jwt = {
+    secret: 'MrWolf',
+    expiresInMinutes: 20
+};
+
+module.exports = config;
diff --git a/lib/authenticate.js b/lib/authenticate.js
index 0546c36..a0bedab 100644
--- a/lib/authenticate.js
+++ b/lib/authenticate.js
@@ -1,8 +1,32 @@
 "use strict";
 
+var jwt = require('jsonwebtoken');
 var crypto = require('crypto');
+const config = require('../config/jwtConfig');
 
 function hashIt(datos){
     return crypto.createHash('sha256').update(datos).digest('hex');
 }
+function signIt(id) {
+    return jwt.sign({id: id}, config.jwt.secret, {expiresIn: config.jwt.expiresInMinutes * 60});
+}
+
+function validateIt( token ){
+
+    let decoded;
+    let message;
+
+    try{
+        let payload = jwt.verify(token, config.jwt.secret);
+        message = ({ success: true, result: { mensaje: 'Validado el token', token: token, payload: payload }});        
+    } catch (err) {
+        message= ({ success: false, result: { error: 403, mensaje: 'El token no es válido o ha expirado.'}});
+    } finally {
+        return message;
+    }
+
+}
+
 module.exports.hashIt = hashIt;
+module.exports.signIt = signIt;
+module.exports.validateIt = validateIt;
diff --git a/lib/sample_data/usuarios.json b/lib/sample_data/usuarios.json
index 1c5bc9e..5696809 100644
--- a/lib/sample_data/usuarios.json
+++ b/lib/sample_data/usuarios.json
@@ -3,12 +3,14 @@
         {
             "nombre": "Jones",
             "email": "jones@invalid.com",
-            "clave": "passwordJones"
+            "clave": "passwordJones",
+            "lang": "en"
         },
         {
             "nombre": "James",
             "email": "james@invalid.com",
-            "clave": "passwordJames"
+            "clave": "passwordJames",
+            "lang": "es"
         }
     ]
 }
\ No newline at end of file
diff --git a/models/Usuario.js b/models/Usuario.js
index b189be9..efba591 100644
--- a/models/Usuario.js
+++ b/models/Usuario.js
@@ -4,23 +4,25 @@ const mongoose = require('mongoose');
 const authenticate = require('../lib/authenticate');
 
 const usuarioSchema = mongoose.Schema({
-  nombre: String,
-  email: String,
-  clave: String,
-  created_at: Date,
-  updated_at: Date
+    nombre: String,
+    email: String,
+    clave: String,
+    lang: String,
+    created_at: Date,
+    updated_at: Date
 });
 
 usuarioSchema.pre('save', function(next) {
-  var currentDate = new Date();
-  this.updated_at = currentDate;
-  if (!this.created_at) {
-    this.created_at = currentDate;
-  }
-  if (this.clave) {
-    this.clave = authenticate.hashIt(this.clave);
-  }
-  next();
+    var currentDate = new Date();
+    this.updated_at = currentDate;
+    if (!this.created_at) {
+        this.created_at = currentDate;
+    }
+    if (this.clave) {
+        this.clave = authenticate.hashIt(this.clave);
+    }
+    this.lang = lang || 'en';
+    next();
 });
 
 var Usuario = mongoose.model('Usuario', usuarioSchema);
diff --git a/package.json b/package.json
index 91a3b5a..61f92c0 100644
--- a/package.json
+++ b/package.json
@@ -14,6 +14,7 @@
     "debug": "~2.6.3",
     "ejs": "~2.5.6",
     "express": "~4.15.2",
+    "jsonwebtoken": "^7.4.1",
     "mongoose": "^4.9.9",
     "morgan": "~1.8.1",
     "os": "^0.1.1",
diff --git a/routes/api_v1/signIn.js b/routes/api_v1/signIn.js
new file mode 100644
index 0000000..19e3cba
--- /dev/null
+++ b/routes/api_v1/signIn.js
@@ -0,0 +1,43 @@
+"use strict";
+
+var express = require('express');
+var router = express.Router();
+const Usuario = require('../../models/Usuario');
+const authenticate = require('../../lib/authenticate');
+
+//POST /api_v1/signIn {user: 'James', pass: 'passwordJames'}
+router.post( '/', function (req, res, next) {
+
+    if(!req.body.nombre){
+        res.json( { success: false, result: { error: 401, mensaje: 'Introduzca nombre de usuario para validarse' } } );
+        return;
+    }
+    if(!req.body.clave){
+        res.json( { success: false, result: { error: 401, mensaje: 'Introduzca clave de usuario para validarse' } } );
+        return;
+    }
+
+    Usuario.findOne({ nombre : req.body.nombre }).exec((err, usuario) => {
+        if (err) {
+            next(err);
+            return;
+        }
+        if ( usuario === null ) {
+            res.json( { success: false, result: {error: 401, message: 'Acceso denegado' } } );
+            return;
+        }
+        if ( usuario.clave !== authenticate.hashIt(req.body.clave) ) {
+            res.json( { success: false, result: {error: 401, message: 'Acceso denegado' } } );
+            return;
+        }
+        
+       // Crear un token
+        var token = authenticate.signIt(usuario._id);
+        res.json( {success: true, result: {message: 'Usuario autenticado', token: token} } );
+        return;
+
+    });
+
+});
+
+module.exports = router;
\ No newline at end of file
diff --git a/routes/api_v1/usuarios.js b/routes/api_v1/usuarios.js
index 44440f7..504a190 100644
--- a/routes/api_v1/usuarios.js
+++ b/routes/api_v1/usuarios.js
@@ -5,36 +5,34 @@ var router = express.Router();
 const Usuario = require('../../models/Usuario');
 const authenticate = require('../../lib/authenticate');
 
-//POST /apiv1/authenticate {user: 'James', pass: 'passwordJames'}
-router.post( '/authenticate', function (req, res, next) {
+var jwt = require('jsonwebtoken');
 
-    console.log(req.body);
-
-    if(!req.body.nombre){
-        res.json( { success: false, result: 'Introduzca nombre de usuario para validarse' } );
-        return;
+/* GET /api_v1/usuarios/:id */
+router.get('/:nombre', (req, res, next) => {
+    var token = req.body.token || req.query.token || req.headers['x-access-token'] || req.headers.token;
+    if(!token) {
+        return res.json({ success: false, result: { error: 401, mensaje: "Tu petición no tiene cabecera de autorización"}});
     }
-    if(!req.body.clave){
-        res.json( { success: false, result: 'Introduzca clave de usuario para validarse' } );
+    let message = authenticate.validateIt(token);
+    if(message.result.error){
+        res.json( message );
         return;
     }
 
-    Usuario.findOne({ nombre : req.body.nombre }).exec((err, usuario) => {
-        console.log ('Err:', err, 'Usuario', usuario);
+    console.log('Usuario: ', req.params.nombre);
+    Usuario.findOne( { nombre: req.params.nombre} ).exec((err, usuario) => {
+        console.log('Usuario: ', usuario);
         if (err) {
             next(err);
             return;
         }
-        if ( usuario === null ) {
-            res.json( { success: false, result: 'Acceso denegado' } );
-            return;
-        }
-        if ( usuario.clave !== authenticate.hashIt(req.body.clave) ) {
-            res.json( { success: false, result: 'Acceso denegado' } );
-            return;
+        if ( usuario !== null ) {
+            message.result.usuario = {
+                nombre: usuario.nombre,
+                fecha_alta: usuario.created_at
+            };
         }
-
-        res.json( { success: true, result: usuario } );
+    res.json( message );
 
     });
 
